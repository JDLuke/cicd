name: Read Configuration File

on:
  workflow_call:
    outputs:
      json-config:
        description: Configuration for build (from config.yml)
        value: ${{ jobs.read-config.outputs.json-config }}
        
jobs:
  read-config:
    runs-on: ubuntu-latest
    outputs:
      json-config: ${{ steps.env.outputs.json-config }}
      java-version: ${{ steps.default-config.outputs.java_version }}

    steps:
      - uses: actions/checkout@v4
        name: Obtain default pipeline configuration
        with:
          repository: JDluke/cicd # Replace with your dedicated pipeline project repository
          path: cicd-project
          fetch-depth: 1
          sparse-checkout: 'default_config.yml'

      - name: Read configuration
        id: default-config
        run: |
          if [ -f config.yml ]; then
            java_version=$(cat config.yml | grep java_version | awk '{print $2}')
          fi
          if [ -z "$java_version" ]; then
            if [ -f cicd-project/default_values.yml ]; then
              java_version=$(cat cicd-project/default_values.yml | grep java_version | awk '{print $2}')
            else
              java_version='17' # Fallback default value
            fi
          fi
          echo "Using Java version $java_version"
          echo "JAVA_VERSION=$java_version" >> $GITHUB_OUTPUT

      - name: Restore repository cache
        uses: actions/cache@v4
        with:
          path: .
          key: ${{ runner.os }}-repo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-repo-${{ github.sha }}

      - name: Get project name
        run: |
          REPO_NAME=$(echo $GITHUB_REPOSITORY | cut -d'/' -f2)
          echo "Project name: $REPO_NAME"
          echo "PROJECT_NAME=$REPO_NAME" >> $GITHUB_ENV

      - name: Install yaml library
        run: npm install js-yaml

      - name: Read project configuration file
        id: project-config
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const yaml = require('js-yaml');
            try {
              const config = yaml.load(fs.readFileSync('config.yml', 'utf8'));
              console.log("Configuration file loaded successfully:");
              console.log(config);

              config[JAVA_VERSION] = '${{ steps.default-config.outputs.JAVA_VERSION }}';
              config[PROJECT_NAME] = '${{ env.PROJECT_NAME }}';     
              const jsonConfig = JSON.stringify(config);
              return jsonConfig;
            } catch (error) {
              console.error("Unable to read configuration file: ", error);
              return '{ "PROJECT_NAME": "${{ env.PROJECT_NAME }}",
                        "JAVA_VERSION": "${{ steps.default-config.outputs.JAVA_VERSION }}" }';
            }

      - name: Setup Environment
        id: env
        run: |
          echo json-config=${{ steps.config.outputs.result }} >> $GITHUB_OUTPUT
