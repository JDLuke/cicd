name: Component Tests

on:
  workflow_call:
    inputs:
      configuration:
        required: true
        type: string
    outputs:
      test-result:
        description: "Result of Component Testing"
        value: ${{ jobs.test.outputs.outcome }}


jobs:
  component_tests:
    runs-on: ubuntu-latest
    outputs:
      outcome: ${{steps.status.outcome}}

    steps:
      - name: Restore repository cache
        uses: actions/cache@v4
        with:
          path: .
          key: ${{ runner.os }}-repo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-repo-${{ github.sha }}

      - name: Extract configuration
        id: environment
        uses: actions/github-script@v6
        with:
          script: |
            const environment = '${{ inputs.environment }}';
            console.log("Environment: " + environment);
            try {
              const parsed = JSON.parse(environment);
              console.log('Parsed: ' + parsed);
              for(let key in parsed) {
                if (parsed.hasOwnProperty(key)) {
                  console.log(key + ': ' + parsed[key]);
                  core.exportVariable(key, parsed[key]);
                }
              }
            } catch (error) {
              console.error("Error parsing JSON:", error);
              core.setFailed(error.message);
            }


      - name: Set up JDK ${{ env.java_version }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.java_version }}
          distribution: ${{ env.java_distribution }}
          cache: ${{ env.java_cache }}

      - name: Cache local Maven repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Test output
        run: echo ${{ steps.deserialize.outputs.skip }}

      - name: Run component tests
        if: ${{ inputs.configuration.component_tests != false }}
        run: |
          echo 
          echo "Running component tests..."
          mvn verify

      - name: Set status
        id: status
        run: echo "outcome=true" >> $GITHUB_OUTPUT
